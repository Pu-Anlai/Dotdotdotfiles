#!/usr/bin/env fish

# move to base tmp_directory
set tmp_dir (mktemp -d)
cd $tmp_dir

function install_from_aur
    if not pacman -Q $argv >/dev/null 2>&1
        aurmake $argv
    end
end

function ask_for_continue -a prompt
    test -n "$prompt" && echo "$prompt"
    read -P "Continue? [y] " -n 1 answer
    if [ ! (echo "$answer" | tr 'Y' 'y') = 'y' ]
        return 1
    else
        return 0
    end
end

function print_bold
    echo ''
    echo -e "\033[1m"$argv"\033[0m"
end

function install_auracle
    print_bold "Building auracle..."
    cd (mktemp -d -p $tmp_dir)
    git clone 'https://aur.archlinux.org/auracle-git.git'
    cd auracle-git
    makepkg -sri
end

function install_sudo
    print_bold "Installing sudo..."
    su -c 'pacman -S --needed sudo'
    echo "Now configure sudo so the current user can use it to gain superuser privileges. Afterwards, run this script again."
    exit
end

function systemd_enable
    argparse 'user' -- $argv
    systemctl $_flag_user is-enabled --quiet $argv && return
    if [ -n "$_flag_user" ]
        print_bold "Enabling systemd user service "$argv"..."
        systemctl $_flag_user enable --now $argv
    else
        print_bold "Enabling systemd service "$argv"..."
        sudo systemctl enable --now $argv
    end
end

print_bold "This script assumes the following:"
echo -e "  - you are logged in as a non-root user\n"\
"  - network access is set up\n"\
"  - \$HOME is a clone of this repo: https://github.com/InspectorMustache/Dotdotdotfiles.git\n"

if [ -z "$AURMAKE_FOLDER" ]
    echo -e "Note: AURMAKE_FOLDER will be set to $HOME/Downloads/AUR.\n"
    set -x AURMAKE_FOLDER "$HOME/Downloads/AUR"
end

ask_for_continue || exit

# install sudo first
print_bold "Installing sudo..."
command -s sudo >/dev/null 2>&1; or install_sudo

# make sure there's a writable folder at /var/cache/pacman/makepkg
if [ ! -w /var/cache/pacman/makepkg ]
    print_bold "Setting up /var/cache/pacman/makepkg..."
    sudo mkdir -p /var/cache/pacman/makepkg
    sudo chown $USER /var/cache/pacman/makepkg
end

# then git
print_bold "Installing base tools for proceeding..."
sudo pacman -S --needed git fontconfig p7zip base-devel

print_bold "Merge configuration files..."
~/.local/bin/merge-configs

# ensure auracle is present
command -s auracle >/dev/null 2>&1; or install_auracle

# make i3 or sway install
read -P "Enter i3 or sway depending on which window manager (including extensions) to install.  Any other input will skip this step. " choice
switch $choice
    case i3
        sudo pacman -S --needed i3-gaps xorg-xset xorg-xkbcomp xss-lock dunst xdotool numlockx xorg-server
        systemd_enable --user dunst
        install_from_aur i3lock-color
        install_from_aur unclutter-xfixes-git
    case sway
        sudo pacman -S --needed sway mako
        systemd_enable --user mako
        install_from_aur ydotool
    case '*'
        true
end

ask_for_continue "Install additional fonts?" && begin
    install_from_aur ttf-mononoki
    install_from_aur otf-font-awesome-4
    install_from_aur ttf-merriweather
    install_from_aur ttf-gidole
    install_from_aur office-code-pro
    sudo pacman -S --needed ttf-liberation ttf-freefont noto-fonts-cjk
    set font_installed
end

print_bold "Downloading some additional packages from the official repositiories..."
# some basic packages and globally acessible fonts

sudo pacman -S --needed \
    alacritty \
    alsa-utils \
    arc-gtk-theme \
    dnscrypt-proxy \
    img \
    fzf \
    i3blocks \
    ibus \
    mpv \
    openssh \
    pass \
    smartmontools \
    syncthing \
    zathura

# backend for zathura
sudo pacman -S --asdeps zathura-pdf-poppler

# once more why not
print_bold "Merge configuration files..."
~/.local/bin/merge-configs

# clean up
print_bold "Deleting temporary directories..."
rm -rf $tmp_dir

if set -q font_installed
    print_bold "Updating font cache..."
    fc-cache -fv
end

systemd_enable systemd-timesyncd

systemd_enable dnscrypt-proxy

systemd_enable smartd

read -P "Enter 'amd' or 'intel' to install the respective microcode package or neither to skip this step. " answer
switch $answer
    case "amd"
        sudo pacman -S amd-ucode
    case "intel"
        sudo pacman -S intel-ucode
end

print_bold "Done!"
print_bold "\nLeft to do:"
print_bold "\tSet up password store"
print_bold "\tSet up GPG"
print_bold "\tSet up SSH"
print_bold "\tSet up Syncthing"
print_bold "\tSet up dnscrypt-proxy"
print_bold "\tSet up bootloader for microcode (if necessary)"
print_bold "\tInstall a display manager or similar"
